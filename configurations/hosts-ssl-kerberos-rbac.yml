---
all:
  vars:
    ansible_connection: ssh
    ansible_user: ubuntu
    ansible_become: true
    #ansible_ssh_private_key_file: <<path-to-pem-file>>
    jmxexporter_enabled: true
    ssl_enabled: true
    ssl_provided_keystore_and_truststore: true
    # Enable the next line for production (otherwise rolling SSL certificates will not work)
    regenerate_keystore_and_truststore: true
    #ssl_mutual_auth_enabled: true
    ssl_keystore_filepath: "/home/ubuntu/ssl/{{inventory_hostname}}-keystore.jks"
    ssl_keystore_key_password: changeme
    ssl_keystore_store_password: changeme
    ssl_truststore_filepath: "/home/ubuntu/ssl/kafka-truststore.jks"
    ssl_truststore_password: changeme
    ssl_truststore_ca_cert_alias: root-ca
    # Credentials used/required for bootstrapping the system
    rbac_enabled: true
    mds_super_user: mds
    mds_super_user_password: mds-secret
    # LDAP users for services
    kafka_broker_ldap_user: kafka
    kafka_broker_ldap_password: kafka-secret
    schema_registry_ldap_user: schemaregistry
    schema_registry_ldap_password: schema-secret
    kafka_connect_ldap_user: connect
    kafka_connect_ldap_password: connect-secret
    ksql_ldap_user: ksql
    ksql_ldap_password: ksql-secret
    kafka_rest_ldap_user: rest
    kafka_rest_ldap_password: rest-secret
    control_center_ldap_user: controlcenter
    control_center_ldap_password: c3-secret
    kafka_broker_custom_listeners:
      broker:
        name: BROKER
        port: 9091
        ssl_enabled: true
        ssl_mutual_auth_enabled: false
        sasl_protocol: kerberos
      internal:
        name: INTERNAL
        port: 9092
        ssl_enabled: true
        ssl_mutual_auth_enabled: false
        sasl_protocol: oauth
      client_listener:
        name: CLIENT
        port: 9093
        ssl_enabled: true
        ssl_mutual_auth_enabled: true
      ldap_listener:
        name: LDAP
        port: 9094
        ssl_enabled: true
        ssl_mutual_auth_enabled: false
        sasl_protocol: plain
    rbac_component_additional_system_admins:
      - alice
    sasl_protocol: kerberos
    zookeeper_client_authentication_type: kerberos
    kerberos_configure: true
    kerberos_kafka_broker_primary: kafka
    kerberos:
      canonicalize: false
      realm: BOOTCAMP-EMEA.CONFLUENT.IO
      kdc_hostname: samba.bootcamp-emea.confluent.io
      admin_hostname: samba.bootcamp-emea.confluent.io
    zookeeper_kerberos_keytab_path: /home/ubuntu/kerberos/zookeeper-{{inventory_hostname_short}}.keytab
    zookeeper_kerberos_principal: zookeeper/{{inventory_hostname}}@{{kerberos.realm | upper}}
    kafka_broker_kerberos_keytab_path: /home/ubuntu/kerberos/kafka-{{inventory_hostname_short}}.keytab
    kafka_broker_kerberos_principal: kafka/{{inventory_hostname}}@{{kerberos.realm | upper}}
    schema_registry_kerberos_keytab_path: /home/ubuntu/kerberos/schema-registry-{{inventory_hostname_short}}.keytab
    schema_registry_kerberos_principal: schema-registry/{{inventory_hostname}}@{{kerberos.realm | upper}}
    kafka_connect_kerberos_keytab_path: /home/ubuntu/kerberos/kafka-connect-{{inventory_hostname_short}}.keytab
    kafka_connect_kerberos_principal: kafka-connect/{{inventory_hostname}}@{{kerberos.realm | upper}}
    ksql_kerberos_keytab_path: /home/ubuntu/kerberos/ksqldb-{{inventory_hostname_short}}.keytab
    ksql_kerberos_principal: ksqldb/{{inventory_hostname}}@{{kerberos.realm | upper}}
    kafka_rest_kerberos_keytab_path: "/home/ubuntu/kerberos/rest-{{inventory_hostname_short}}.keytab"
    kafka_rest_kerberos_principal: "rest/{{inventory_hostname}}@{{kerberos.realm | upper}}"
    control_center_kerberos_keytab_path: /home/ubuntu/kerberos/control-center-{{inventory_hostname_short}}.keytab
    control_center_kerberos_principal: control-center/{{inventory_hostname}}@{{kerberos.realm | upper}}
kafka:
  children:
    zookeeper:
      hosts:
        ip-172-30-1-78.eu-west-1.compute.internal:
        ip-172-30-2-216.eu-west-1.compute.internal:
        ip-172-30-3-225.eu-west-1.compute.internal:

    kafka_controller:
      hosts:

    kafka_broker:
      vars:
        kafka_broker_custom_properties:
          #super.users: "User:alice;User:kafka;User:schema-registry;User:ksqldb;User:kafka_rest;User:control-center;User:kafka-connect"
          #authorizer.class.name: kafka.security.authorizer.AclAuthorizer
          auto.create.topics.enable: false
          # Enable RBAC via LDAP
          ldap.java.naming.factory.initial: com.sun.jndi.ldap.LdapCtxFactory
          ldap.com.sun.jndi.ldap.read.timeout: 3000
          ldap.java.naming.provider.url: ldaps://samba.bootcamp-emea.confluent.io:636
          ldap.java.naming.security.protocol: SSL
          ldap.ssl.truststore.location: "{{kafka_broker_truststore_path}}"
          ldap.ssl.truststore.password: "{{kafka_broker_truststore_storepass}}"
          ldap.java.naming.security.principal: CN=mds,OU=Users,OU=Kafka,DC=bootcamp-emea,DC=confluent,DC=io
          ldap.java.naming.security.credentials: mds-secret
          ldap.java.naming.security.authentication: simple
          ldap.user.search.base: OU=Users,OU=Kafka,DC=bootcamp-emea,DC=confluent,DC=io
          ldap.group.search.base: OU=Groups,OU=Kafka,DC=bootcamp-emea,DC=confluent,DC=io
          ldap.user.name.attribute: sAMAccountName
          ldap.user.memberof.attribute.pattern: CN=(.*),OU=Groups,OU=Kafka,DC=bootcamp-emea,DC=confluent,DC=io
          ldap.user.memberof.attribute: memberOf
          ldap.group.name.attribute: cn
          ldap.group.member.attribute.pattern: CN=(.*),OU=Users,OU=Kafka,DC=bootcamp-emea,DC=confluent,DC=io
          ldap.user.object.class: user
          ldap.search.mode: USERS
          ldap.user.search.scope: 2
          listener.name.ldap.plain.sasl.server.callback.handler.class: io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
      hosts:
        ip-172-30-1-108.eu-west-1.compute.internal:
          kafka_broker_custom_properties:
            broker.rack: eu-west-1a
        ip-172-30-1-30.eu-west-1.compute.internal:
          kafka_broker_custom_properties:
            broker.rack: eu-west-1a
        ip-172-30-2-27.eu-west-1.compute.internal:
          kafka_broker_custom_properties:
            broker.rack: eu-west-1b
        ip-172-30-3-100.eu-west-1.compute.internal:
          kafka_broker_custom_properties:
            broker.rack: eu-west-1c

    kafka_connect:
      hosts:
        ip-172-30-1-32.eu-west-1.compute.internal:
        ip-172-30-2-134.eu-west-1.compute.internal:

    schema_registry:
      hosts:
        ip-172-30-1-186.eu-west-1.compute.internal:
        ip-172-30-2-206.eu-west-1.compute.internal:

    kafka_rest:
      hosts:
        ip-172-30-1-143.eu-west-1.compute.internal:
    ksql:
      hosts:
        ip-172-30-1-148.eu-west-1.compute.internal:
        ip-172-30-2-83.eu-west-1.compute.internal:

    control_center:
      hosts:
        ip-172-30-1-73.eu-west-1.compute.internal:
monitoring:
  children:
    prometheus:
      hosts:
        ip-172-30-0-79.eu-west-1.compute.internal:
          prometheus_scrape_configs:
            - job_name: "zookeeper"
              static_configs:
                - targets:
                    - ip-172-30-1-78.eu-west-1.compute.internal:8079
                    - ip-172-30-2-216.eu-west-1.compute.internal:8079
                    - ip-172-30-3-225.eu-west-1.compute.internal:8079
                  labels:
                    env: "dev"
              relabel_configs:
                - source_labels: [__address__]
                  target_label: instance
                  regex: "([^:]+)(:[0-9]+)?"
                  replacement: "${1}"
            - job_name: "kafka-broker"
              static_configs:
                - targets:
                    - ip-172-30-1-30.eu-west-1.compute.internal:8080
                    - ip-172-30-2-27.eu-west-1.compute.internal:8080
                    - ip-172-30-3-100.eu-west-1.compute.internal:8080
                    - ip-172-30-1-108.eu-west-1.compute.internal:8080
                  labels:
                    env: "dev"
              relabel_configs:
                - source_labels: [__address__]
                  target_label: instance
                  regex: "([^:]+)(:[0-9]+)?"
                  replacement: "${1}"
            - job_name: "schema-registry"
              static_configs:
                - targets:
                    - ip-172-30-1-186.eu-west-1.compute.internal:8078
                    - ip-172-30-2-206.eu-west-1.compute.internal:8078
                  labels:
                    env: "dev"
              relabel_configs:
                - source_labels: [__address__]
                  target_label: instance
                  regex: "([^:]+)(:[0-9]+)?"
                  replacement: "${1}"
            - job_name: "kafka-connect"
              static_configs:
                - targets:
                    - ip-172-30-1-32.eu-west-1.compute.internal:8077
                    - ip-172-30-2-134.eu-west-1.compute.internal:8077
                  labels:
                    env: "dev"
              relabel_configs:
                - source_labels: [__address__]
                  target_label: instance
                  regex: "([^:]+)(:[0-9]+)?"
                  replacement: "${1}"
            - job_name: "ksqldb"
              static_configs:
                - targets:
                    - ip-172-30-1-148.eu-west-1.compute.internal:8076
                    - ip-172-30-2-83.eu-west-1.compute.internal:8076
                  labels:
                    env: "dev"
              relabel_configs:
                - source_labels: [__address__]
                  target_label: instance
                  regex: "([^:]+)(:[0-9]+)?"
                  replacement: "${1}"
    grafana:
      hosts:
        ip-172-30-0-48.eu-west-1.compute.internal:
                grafana_prometheus_url: http://ip-172-30-0-79.eu-west-1.compute.internal:9090

 
